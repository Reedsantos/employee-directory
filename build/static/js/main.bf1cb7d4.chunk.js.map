{"version":3,"sources":["components/Header.js","components/DataBody.js","components/DataTable.js","components/SearchBox.js","components/Nav.js","utils/API.js","components/DataArea.js","components/Main.js","components/Wrapper.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","DataBody","users","formatDate","date","dateArray","split","year","join","undefined","name","map","login","picture","phone","email","dob","data-th","src","medium","alt","first","last","href","target","uuid","DataTable","headings","handleSort","id","width","style","onClick","toLowerCase","SearchBox","handleSearchChange","type","placeholder","aria-label","onChange","e","Nav","axios","get","DataArea","state","order","filteredUsers","heading","setState","sortedUsers","sort","a","b","localeCompare","event","console","log","value","filter","filteredList","item","Object","values","indexOf","API","then","results","data","this","Main","Wrapper","children","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bf1cb7d4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport \"../styles/Header.css\";\n\n// header is a standalone component\nexport default class Header extends Component {\n    render() {\n        return (\n            <div className=\"header\">\n                <h1>Employee Directory</h1>\n                <p>Click the header \"Name\" to sort by name and use the search bar to filter employees.</p>\n            </div>\n        )\n    }\n}\n","// dataBody.js is within dataTable.js\nimport React from \"react\";\n\n// ensures date of birth is ordered MM-DD-YYY\nfunction DataBody({ users }) {\n  function formatDate(date) {\n    const dateArray = date.split(\"-\");\n    const year = dateArray[0];\n    const month = dateArray[1];\n    const dayArray = dateArray[2].split(\"T\");\n    const day = dayArray[0];\n    const formattedDate = [month, day, year].join(\"-\");\n    return formattedDate;\n  }\n\n  // this function formats employee objects\n  return (\n    <tbody>\n      {users[0] !== undefined && users[0].name !== undefined ? (\n        users.map(({ login, name, picture, phone, email, dob }) => {\n          return (\n            <tr key={login.uuid}>\n              <td data-th=\"IMAGE\" className=\"align-middle\">\n                <img\n                  src={picture.medium}\n                  alt={\"profile image for \" + name.first + \" \" + name.last}\n                  className=\"img-responsive\"\n                />\n              </td>\n              <td data-th=\"NAME\" className=\"name-cell align-middle\">\n                {name.first} {name.last}\n              </td>\n              <td data-th=\"PHONE\" className=\"align-middle\">\n                {phone}\n              </td>\n              <td data-th=\"EMAIL\" className=\"align-middle\">\n                <a href={\"mailto:\" + email} target=\"__blank\">\n                  {email}\n                </a>\n              </td>\n              <td data-th=\"D.O.B.\" className=\"align-middle\">\n                {formatDate(dob.date)}\n              </td>\n            </tr>\n          );\n        })\n      ) : (\n        <></>\n      )}\n    </tbody>\n  );\n}\n\nexport default DataBody;","// dataTable.js is within dataArea.js\nimport React from \"react\";\nimport DataBody from \"./DataBody\";\nimport \"../styles/DataTable.css\";\n\n// dataBody.js is within dataTable.js\nfunction DataTable({ headings, users, handleSort }) {\n  return (\n    <div className=\"datatable mt-5\">\n      <table\n        id=\"table\"\n        className=\"table table-striped table-hover table-condensed\"\n      >\n        <thead>\n          <tr>\n            {headings.map(({ name, width }) => {\n              return (\n                <th\n                  className=\"col\"\n                  key={name}\n                  style={{ width }}\n                  onClick={() => {\n                    handleSort(name.toLowerCase());\n                  }}\n                >\n                  {name}\n                </th>\n              );\n            })}\n          </tr>\n        </thead>\n        <DataBody users={users} />\n      </table>\n    </div>\n  );\n}\n\nexport default DataTable;","import React from \"react\";\n\n// searchBox.js is within nav.js\nfunction SearchBox({ handleSearchChange }) {\n  return (\n    <div className=\"searchBox\">\n      <form className=\"form-inline\">\n        <input\n          className=\"form-control\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          onChange={e => handleSearchChange(e)}\n        />\n      </form>\n    </div>\n  );\n}\nexport default SearchBox;","// nav.js is within dataArea.js\nimport React from \"react\";\nimport SearchBox from \"./SearchBox.js\";\nimport \"../styles/Nav.css\";\n\n// searchBox.js is within nav.js\nfunction Nav({ handleSearchChange }) {\n  return (\n    <nav className=\"navbar navbar-expand navbar-light bg-light\">\n      <div className=\"navbar-collapse row\" id=\"navbarNav\">\n        <SearchBox handleSearchChange={handleSearchChange} />\n      </div>\n    </nav>\n  );\n}\nexport default Nav;","import axios from \"axios\";\n\nexport default {\n  getUsers: function() {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=us\");\n  }\n};\n","// dataArea.js is within main.js\nimport React, { Component } from 'react'\nimport DataTable from \"./DataTable\";\nimport Nav from \"./Nav\";\nimport API from \"../utils/API\";\nimport \"../styles/DataArea.css\";\n\n// empty array\nexport default class DataArea extends Component {\n    state = {\n        users: [{}],\n        order: \"descend\",\n        filteredUsers: [{}]\n    }\n\n    headings = [\n        { name: \"\", width: \"10%\" },\n        { name: \"NAME\", width: \"10%\" },\n        { name: \"PHONE\", width: \"20%\" },\n        { name: \"EMAIL\", width: \"20%\" },\n        { name: \"D.O.B.\", width: \"10%\" }\n    ]\n\n    // function to sort by first name\n    handleSort = heading => {\n        if (this.state.order === \"descend\") {\n            this.setState({\n                order: \"ascend\"\n            })\n        } else {\n            this.setState({\n                order: \"descend\"\n            })\n        }\n        \n        // this function sorts array and displays new results\n        const compareFunction = (a, b) => {\n            if (this.state.order === \"ascend\") {\n                // Account for missing values\n                if (a[heading] === undefined) {\n                    return 1;\n                } else if (b[heading] === undefined) {\n                    return -1;\n                }\n                // Numerically\n                else if (heading === \"name\") {\n                    return a[heading].first.localeCompare(b[heading].first);\n                } else {\n                    return a[heading] - b[heading];\n                }\n            } else {\n                // Account for missing values\n                if (a[heading] === undefined) {\n                    return 1;\n                } else if (b[heading] === undefined) {\n                    return -1;\n                }\n                // Numerically\n                else if (heading === \"name\") {\n                    return b[heading].first.localeCompare(a[heading].first);\n                } else {\n                    return b[heading] - a[heading];\n                }\n            }\n\n        }\n\n        const sortedUsers = this.state.filteredUsers.sort(compareFunction);\n        this.setState({ filteredUsers: sortedUsers });\n    }\n\n    \n    handleSearchChange = event => {\n        console.log(event.target.value);\n        const filter = event.target.value;\n        const filteredList = this.state.users.filter(item => {\n            // Merge data together, then see if user input is anywhere inside\n            let values = Object.values(item)\n                .join(\"\")\n                .toLowerCase();\n            return values.indexOf(filter.toLowerCase()) !== -1;\n        });\n        this.setState({ filteredUsers: filteredList });\n    }\n    componentDidMount() {\n        API.getUsers().then(results => {\n            this.setState({\n                users: results.data.results,\n                filteredUsers: results.data.results\n            });\n        });\n    }\n\n    // nav.js and dataTable.js are both within dataArea.js\n    render() {\n        return (\n            <>\n                <Nav handleSearchChange={this.handleSearchChange} />\n                <div className=\"data-area\">\n                    <DataTable\n                        headings={this.headings}\n                        users={this.state.filteredUsers}\n                        handleSort={this.handleSort}\n                    />\n                </div>\n            </>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport DataArea from \"./DataArea\";\n\n// dataArea.js is within main.js\nexport default class Main extends Component {\n  render() {\n    return (\n      <>\n        <DataArea />\n      </>\n    );\n  }\n}","import React from 'react';\n\n// wrapper.js is a standalone component\nfunction Wrapper({ children }) {\n    return (\n        <div className=\"wrapper\">\n          { children }\n        </div>\n    );\n  }\n  \n  export default Wrapper;","import React from 'react';\nimport Header from \"./components/Header\";\nimport Main from \"./components/Main\";\nimport './App.css';\nimport Wrapper from './components/Wrapper';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}